{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/expense-tracker-mern/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; // Initial state\n\nconst initialState = {\n  clientes: [{\n    nome: \"Joao\",\n    email: \"joao@gmail.com\"\n  }, {\n    nome: \"Maria\",\n    email: \"maria@gmail.com\"\n  }, {\n    nome: \"Enzo\",\n    email: \"enzo@gmail.com\"\n  }],\n  error: null,\n  loading: true\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/home/gabriel/expense-tracker-mern/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","clientes","nome","email","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post","transactions"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// Initial state\nconst initialState = {\n  clientes: [\n    {nome: \"Joao\", email:\"joao@gmail.com\"},\n    {nome: \"Maria\", email:\"maria@gmail.com\"},\n    {nome: \"Enzo\", email:\"enzo@gmail.com\"}\n  ],\n  error: null,\n  loading: true\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction, config);\n\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return (<GlobalContext.Provider value={{\n    transactions: state.transactions,\n    error: state.error,\n    loading: state.loading,\n    getTransactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    {children}\n  </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}